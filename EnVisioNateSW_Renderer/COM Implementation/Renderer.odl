import "oaidl.idl";
import "ocidl.idl";

#include <olectl.h>

[ 
   uuid(CC9F95CD-24F1-450A-8883-02B5314B1C80),
   helpstring("EnVisioNateSW Renderer"), 
   lcid(0x0), 
   version(1.0)
] 

library Renderer { 

    [uuid(CC9F95CD-24F1-450A-8883-02B5314B1C81),
      helpstring("EnVisioNateSW Renderer Interface"),
      nonextensible,pointer_default(unique)] 

    interface IRenderer : IUnknown {

        [propput] HRESULT TransformMatrix(UINT_PTR /*XFORM*/ pXformToDeviceSpace);
        [propput] HRESULT DownScale(FLOAT downScale);
        [propput] HRESULT Origin(POINTF origin);

        HRESULT Render(HDC hdc,RECT *pDrawingRect);
        HRESULT Discard();
        HRESULT ClearRect(HDC hdc,RECT *pRect,COLORREF theColor);

        HRESULT Reset();

        HRESULT GetParametersBundle(UINT_PTR **pptrBundleStorage);
        HRESULT SetParametersBundle(UINT_PTR *ptrBundleStorage);

    };

    [uuid(CC9F95CD-24F1-450A-8883-02B5314B1C82),
      helpstring("EnVisioNateSW Graphics Primitives Interface"),
      nonextensible,pointer_default(unique)] 

    interface IGraphicElements : IUnknown {

        HRESULT NewPath();
        HRESULT ClosePath();
        HRESULT StrokePath();
        HRESULT FillPath();
        
        HRESULT MoveTo(FLOAT x,FLOAT y);
        HRESULT MoveToRelative(FLOAT x,FLOAT y);

        HRESULT LineTo(FLOAT x,FLOAT y);
        HRESULT LineToRelative(FLOAT x,FLOAT y);

        HRESULT ArcTo(FLOAT xCenter,FLOAT yCenter,FLOAT radius,FLOAT angle1,FLOAT angle2);
        HRESULT CubicBezierTo(FLOAT x1,FLOAT y1,FLOAT x2,FLOAT y2,FLOAT x3,FLOAT y3);
        HRESULT QuadraticBezierTo(FLOAT x1,FLOAT y1,FLOAT x2,FLOAT y2);

        HRESULT Image(HDC hdc,HBITMAP hBitmap,UINT_PTR /*xForm*/ pPSCurrentCTM,FLOAT width,FLOAT height);

    };

    [uuid(CC9F95CD-24F1-450A-8883-02B5314B1C83),
        helpstring("EnVisioNateSW Graphics Parameters Interface"),
      nonextensible,pointer_default(unique)] 

    interface IGraphicParameters : IUnknown {

        HRESULT SaveState();
        HRESULT RestoreState();

        [propput] HRESULT LineWidth(FLOAT lw);
        [propput] HRESULT LineJoin(long lj);
        [propput] HRESULT LineCap(long lc);
        [propput] HRESULT LineDash(FLOAT *pValues,long countValues,FLOAT offset);

        [propput] HRESULT RGBColor(COLORREF rgb);

    };

    [uuid(CC9F95CD-24F1-450A-8883-02B5314B1C84),
      helpstring("EnVisioNateSW Renderer Notifications Interface"),
      nonextensible,pointer_default(unique)] 

    interface IRendererNotifications : IUnknown {
        [helpstring("Please DO NOT free the UINT_PTR, it is statically allocated")]
        HRESULT ErrorNotification(UINT_PTR errorMessage);
        HRESULT StatusNotification(UINT_PTR statusMessage);
    };

    [uuid(CC9F95CD-24F1-450A-8883-02B5314B1C90),
    helpstring("")]
        coclass Renderer{
        [default] interface IUnknown;
        [source] interface IRendererNotifications;
    };

};