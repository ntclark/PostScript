%!PS-Adobe-3.0
%%Title: Microsoft Word - Document1
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 4/5/2024 16:28:49
%%For: Nate
%%BoundingBox: (atend)
%%Pages: (atend)
%%Orientation: Portrait
%%PageOrder: Special
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: CursiVision Printer Driver (2015.105) 9
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 0 0 612 792
%%ViewingOrientation: 1 0 0 1
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0

/currentpacking where { pop /oldpack currentpacking def /setpacking where { pop false setpacking } if } if

/$brkpage 64 dict def 

$brkpage begin 

/prnt { 
    dup type /stringtype ne { = string cvs } if 
    dup length 6 mul 
    /tx exch def 
    /ty 10 def currentpoint 
    /toy exch def
    /tox exch def 
    1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show 
} bind def

/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def

/stringtype { dup rcheck { (\()tprint tprint(\)) tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def

/courier

/Courier findfont 10 scalefont def end errordict 

/handleerror 
    { systemdict begin $error begin $brkpage begin newerror 
        { /newerror false store vmstatus pop pop 0 ne { grestoreall } if errorname ( VMerror ) ne { showpage } if initgraphics courier setfont lmargin 720 moveto errorname (VMerror) eq { userdict /ehsave known { clear userdict /ehsave get restore 2 vmreclaim } if vmstatus exch pop exch pop PrtVMMsg } { 
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: ) prnt /command load prnt $error /ostack known { nl nl (STACK:) prnt nl nl $error /ostack get aload length {==}

repeat } if } ifelse  

systemdict /showpage get exec (%%[ Error: ) print errorname =print (; OffendingCommand: ) print /command load =print ( ]%%)= flush } if end end end } dup 0 systemdict put dup 4 $brkpage put bind readonly put

/currentpacking where { pop /setpacking where { pop oldpack setpacking } if } if
%%EndResource

userdict /Pscript_WinNT_Incr 230 dict dup begin put

%%Pscript_WinNT_Incr dict is defined, is on top of dict stack, and put into userdict (without a name)

%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource

userdict begin

/PrtVMMsg { 

    vmstatus exch sub exch pop gt { 
        [
        (This job requires more memory than is available in this printer.) 100 500
        (Try one or more of the following, and then print again:) 100 485
        (For the output format, choose Optimize For Portability.) 115 470
        (In the Device Settings page, make sure the Available PostScript Memory is accurate.) 115 455 
        (Reduce the number of fonts in the document.) 115 440 
        (Print the document in parts.) 115 425 
        12 /Times-Roman showpage

        (%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf 
    } if 

} bind def 

end

version cvi 2016 ge { /VM? { pop } bind def } { /VM? userdict /PrtVMMsg get def } ifelse

105000 VM?

%%BeginResource: file Pscript_Win_Basic 5.0 0

/d /def load def
/, /load load d
/~ /exch , d
/? /ifelse , d
/! /pop , d
/` /begin , d
/^ /index , d
/@ /dup , d
/+ /translate , d
/$ /roll , d
/U /userdict , d
/M /moveto , d
/- /rlineto , d
/& /currentdict , d
/: /gsave , d
/; /grestore , d
/F /false , d
/T /true , d
/N /newpath , d
/E /end , d
/Ac /arc , d
/An /arcn , d
/A /ashow , d
/D /awidthshow , d
/C /closepath , d
/V /div , d
/O /eofill , d
/L /fill , d
/I /lineto , d
/-c /curveto , d
/-M /rmoveto , d
/+S /scale , d
/Ji /setfont , d
/Lc /setlinecap , d
/Lj /setlinejoin , d
/Lw /setlinewidth , d
/Lm /setmiterlimit , d
/sd /setdash , d
/S /show , d
/LH /showpage , d
/K /stroke , d
/W /widthshow , d
/R /rotate , d

/L2? false /languagelevel where 
    { pop languagelevel 2 ge 
        { pop true } if 
    } 
    if 
    def 
    L2? 
    { 
        /xS /xshow load def 
        /yS /yshow load def 
        /zS /xyshow load def 
    } if 

/b { bind d } bind d
/bd { bind d } bind d
/xd { ~ d } bd
/ld { , d } bd
/bn /bind ld
/lw /Lw ld
/lc /Lc ld
/lj /Lj ld
/sg /setgray ld
/ADO_mxRot null d
/self & d 
/OrgMx matrix currentmatrix d

%%/reinitialize { : OrgMx setmatrix [ /TextInit /GraphInit /UtilsInit counttomark { @ where { self eq } { F } ? { cvx exec } { ! } ? } repeat cleartomark ; } b

/reinitialize 
{ gsave OrgMx setmatrix [ /TextInit /GraphInit /UtilsInit counttomark 
    { 
     dup where 
        { self eq } 
        { F } 
        ?
        { cvx exec } 
        { pop } 
        ?
    } repeat cleartomark ; 
} b

%%/initialize { ` { /Pscript_Win_Data where { ! } { U /Pscript_Win_Data & put } ? 
%%/ADO_mxRot ~ d /TextInitialised? F d reinitialize E } { U /Pscript_Win_Data 230 dict @ ` put /ADO_mxRot ~ d /TextInitialised? F d reinitialize } ? } b

/initialize 
{ 
    begin 
    {
        /Pscript_Win_Data where 
            { pop } 
            { userdict /Pscript_Win_Data currentdict put } 
        ifelse
        /ADO_mxRot exch d 
        /TextInitialised? false d 
        reinitialize end 
    } 
    { userdict /Pscript_Win_Data 230 dict dup begin put 
        /ADO_mxRot exch def
        /TextInitialised? false def 
        reinitialize 
    } ifelse
} bind def

/terminate { ! { & self eq { exit } { E } ? } loop E } b

/suspend /terminate , d

/resume { ` Pscript_Win_Data ` } b U `
/lucas 21690 d

/featurebegin { countdictstack lucas [ } b

/featurecleanup { stopped { cleartomark @ lucas eq { ! exit } if } loop countdictstack ~ sub @ 0 gt { { E } repeat } { ! } ? } b 

E /snap { transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~ itransform } b 

/dsnap { dtransform round ~ round ~ idtransform } b

/nonzero_round { @ 0.5 ge { round } { @ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b 

U <04> cvn { } put

/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource

%%BeginResource: file Pscript_Win_Utils_L2 5.0 0

/rf 
/rectfill , d
/fx { 1 1 dtransform @ 0 ge {1 sub 0.5 } { 1 add -0.5 } ? 3 -1 $ @ 0 ge { 1 sub 0.5 } { 1 add -0.5 } ? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform } b

/BZ { 4 -2 $ snap + +S fx rf } b

/rs /rectstroke , d
/rc /rectclip , d

/UtilsInit { currentglobal { F setglobal } if } b
/scol { ! setcolor } b
/colspA /DeviceGray d
/colspABC /DeviceRGB d
/colspRefresh { colspABC setcolorspace } b
/SetColSpace { colspABC setcolorspace } b

/resourcestatus where 
    {   ! 
        /ColorRendering 
        /ProcSet resourcestatus 
            { ! ! T } 
            { F } 
            ? 
    } 
    { F } 
    ? 
    not 

    { /ColorRendering << /GetHalftoneName 

        { currenthalftone @ /HalftoneName known 
            { /HalftoneName get } 
            { ! /none } 
            ? 
        } bn 

        /GetPageDeviceName 
        { currentpagedevice @ /PageDeviceName known 
            { /PageDeviceName get @ null eq 
                { ! /none } 
                if 
            } 
            { ! /none } 
            ? 
        } bn

        /GetSubstituteCRD 
        { ! /DefaultColorRendering /ColorRendering resourcestatus 
            { ! ! /DefaultColorRendering } 
            { (DefaultColorRendering*) 
                { cvn exit } 127 string /ColorRendering resourceforall 
            } 
            ? 
        } bn

        >> 

        /defineresource where 
            { ! /ProcSet defineresource ! } 
            { ! ! } 
            ? 
} if

/buildcrdname { /ColorRendering /ProcSet findresource ` mark GetHalftoneName @ type @ /nametype ne ~ /stringtype ne and { ! /none } if (.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource ! } b

/findcolorrendering where 

    { pop }

    { /findcolorrendering 
        { buildcrdname dup /ColorRendering resourcestatus 
            { pop pop true }
            { /ColorRendering /ProcSet findresource begin GetSubstituteCRD end false }
            ifelse
        }
        b
    } 

ifelse 

/selectcolorrendering { findcolorrendering ! /ColorRendering findresource setcolorrendering } b

/G2UBegin
{ 
    findresource /FontInfo get /GlyphNames2Unicode get begin 
} bind d

/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource

end
%%EndProlog

%%BeginSetup
statusdict begin (%%[ ProductName: ) print product print ( ]%%)= flush end
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec

featurebegin{
%%BeginNonPPDFeature: JobTimeout 0
0 /languagelevel where { pop languagelevel } { 1 } ifelse 2 ge { 1 dict dup /JobTimeout  4 -1 roll put setuserparams } { statusdict/setjobtimeout get exec } ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginNonPPDFeature: WaitTimeout 300
300 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin {
%%BeginFeature: *PageSize Letter
(<<) cvx exec /PageSize [612 792] /ImagingBBox null
  (>>) cvx exec setpagedevice
%%EndFeature
}featurecleanup

featurebegin{
%%BeginFeature: *OutputMode Standard

  (<<) cvx exec
    /HWResolution [600 600]
    /ProcessColorModel /DeviceCMYK
  (>>) cvx exec setpagedevice
%%EndFeature
}featurecleanup

featurebegin{
%%BeginFeature: *OutputOrder Normal

  (<<) cvx exec
    /OutputFaceUp false
  (>>) cvx exec setpagedevice
%%EndFeature
}featurecleanup

featurebegin{
%%BeginFeature: *Collate False

  (<<) cvx exec
    /Collate false
  (>>) cvx exec setpagedevice
%%EndFeature
}featurecleanup

featurebegin{
%%BeginFeature: *Resolution 600x600dpi
%%EndFeature
} featurecleanup

featurebegin{
%%BeginFeature: *InstalledMemory 24Meg
%%EndFeature
} featurecleanup

1 setlinecap 1 setlinejoin

/mysetup [ 72 600 V 0 0 -72 600 V 0 792 ] def 

%%EndSetup

userdict begin /ehsave save def end

%%Page: 1 1
%%PageBoundingBox: 0 0 612 792
%%EndPageComments
%%BeginPageSetup

/DeviceRGB dup setcolorspace /colspABC exch def

mysetup concat colspRefresh

%%EndPageSetup

0 0 0 1 scol 29970 VM?

Pscript_WinNT_Incr begin

%%BeginResource: file Pscript_T42Hdr 5.0 0

/asc42 0.0 d
/sF42 { /asc42 ~ d Ji } bind d
/bS42 { 0 asc42 -M } bind d
/eS42 { 0 asc42 neg -M  } b
/Is2015? { version cvi 2015 ge } bind d

/AllocGlyphStorage { Is2015? { pop } { { string } forall } ifelse } bind d

/Type42DictBegin 
{ 
    25 dict begin 
    /FontName exch def 
    /Encoding exch def 
    4 array astore cvx 
    /FontBBox exch def 
    /PaintType 0 def 
    /FontType 42 def 
    /FontMatrix [1 0 0 1 0 0] def 
    /CharStrings 256 dict begin 
    /.notdef 0 def 
    currentdict 
    end 
    def 
    /sfnts 
} bind def

/Type42DictEnd { currentdict dup /FontName get exch definefont pop end } bind d

/RDS { string currentfile ~ readstring ! } executeonly d

/PrepFor2015 
{ 
    Is2015? 
        { /GlyphDirectory 16 dict def sfnts 0 get dup 2 index (glyx) putinterval 2 index (locx) putinterval pop pop } 
        { pop pop } 
        ifelse 
} bind d

/AddT42Char 
{ 
    Is2015? 
        { findfont /GlyphDirectory get begin def end pop pop } 
        { findfont /sfnts get 4 index get 3 index 2 index putinterval pop pop pop pop } 
        ifelse 
} bind def

/IDStrNull { 1 add 2 mul @ string 0 1 3 ^ 1 sub { 1 ^ ~ 0 put } for ~ ! } bind d

/IDStr { @ 1 add 2 mul string 0 1 3 ^ { 1 ^ ~ @ 2 mul ~ 3 copy 256 idiv put ~ 1 add ~ 256 mod put } for ~ ! } bind d

/IDStr2 { ~ @ 1 add 2 mul string 0 1 3 ^ { 1 ^ ~ @ 2 mul ~ 5 ^ add 3 copy 256 idiv put ~ 1 add ~ 256 mod put } for ~ ! ~ ! } bind d

/CIDT42Begin { 25 dict ` 
    /CDevProc ~ d 
    /CIDMap ~ d 
    /CIDCount ~ d 
    /CIDSystemInfo 3 dict @ ` 3 -1 $ 
    /Supplement ~ d 3 -1 $
    /Ordering ~ d 3 -1 $ 
    /Registry ~ d E d 
    /CIDFontName ~ d 
    /Encoding ~ d 4 array astore cvx 
    /FontBBox ~ d 
    /CharStrings 2 dict @ ` 
    /.notdef 0 d E d 
    /GDBytes 2 d 
    /CIDFontType 2 d 
    /FontType 42 d
    /PaintType 0 d
    /FontMatrix [1 0 0 1 0 0] d
    /Metrics2 16 dict d
    /sfnts } bind d

/CIDT42End { CIDFontName & E/CIDFont defineresource ! } bind d

/T42CIDCP32K { 
    /CIDFont findresource @ length dict copy @ 
    /FID undef ` 
    /CIDFontName ~ d 
    /CIDMap ~ d 
    /CIDCount ~ d 
    /Metrics2 8 dict d CIDFontName & E 
    /CIDFont defineresource ! 
} bind d

/T42CIDCPR { /CIDFont findresource @ length dict copy @ /FID undef `/CIDFontName ~ d &/CDevProc known { [/CDevProc , @ type/operatortype ne {/exec cvx }if /! cvx /! cvx /! cvx /! cvx 5 /^ cvx 5 /^ cvx 0.0 0.0] cvx } { {! ! ! ! ! 5 ^ 5 ^ 0.0 0.0 } } ? bind
    readonly/CDevProc ~ d CIDFontName & E/CIDFont defineresource ! } bind d

/T0AddT42Char { /CIDFont findresource /GlyphDirectory get ` d E ! ! } bind d

/T0AddT42Mtx2 { /CIDFont findresource /Metrics2 get ` d E } bind d

/UpdateCIDMap { /CIDFont findresource /CIDMap get 3 1 $ putinterval } d

/AddXUID { version cvi 3011 ge { /XUID ~ d } { ! } ? } bind d

/hfDef42CID { /CIDFont findresource @ length dict copy @ /FID undef `/CIDFontName 2 ^ d @ type @/booleantype ne { /arraytype eq {/CDevProc ~ d } { matrix @ 4 4 -1 $ put/FontMatrix ~ d } ? } { ! ! } ? & E/CIDFont defineresource ! } bind d

/hfDefRT42CID { /CIDFont findresource @ length dict copy @ /FID undef ` /CIDFontName 1 ^ d & /CDevProc known { [/CDevProc , @ type /operatortype ne { /exec cvx } if /! cvx /! cvx /! cvx /! cvx 5 /^ cvx 5 /^ cvx 0.0 0.0] cvx } { { ! ! ! ! ! 5 ^ 5 ^ 0.0 0.0 } }? bind readonly

/CDevProc ~ d & E /CIDFont defineresource ! } bind d

%%EndResource

end 

reinitialize

-0.496 % These 4 numbers will become the font Bounding box
-0.273 
1.18 
1.008 

256 array 0 1 255 { 1 index exch /.notdef put } for  % This will become the Encoding array (loaded with .notdef in all 255 entries)

/TT2886t00 % This will become font name

Type42DictBegin 

[
<00010000000a000a000a000a6376742021a715c7000000ac000000c06670
676d578b0f100000016c00000f83676c79662d3aff33000031a800017dda
6865616424231cf4000010f000000036686865610cfc05df000011280000
0024686d74784226bcd50000114c0000141c6c6f6361250d82b900002568
00000a106d617870088410e600002f7800000020707265707085ff130000
2f980000020f676469720000000000000000000000000542054205420012
ffd5ffe703f600120000ffee0000ffee0000ffeefe9affed051700120000
ffee0000007c0081006d006d0077006400640081006d007a007000760053
00650075006c0067007c006b00670073006a00d70061005a007200540070
0067007b008100860068006d007600680071007b00840060006f0077007b
004d005300580065007500610067006c007100760064007d006b0067006d
00760052006400690075008300d70055005a0064006d007200510057005d
00670071404a9998979687868584838281807f7e7d7c7b7a797877767574
737271706f6e6d6c6b6a696867666564636261605f5e5d5c5b5a59585756
55545351504f4e4d4c4b4a49484746281f100a092c01b10b0a432343650a
2d2c00b10a0b4323430b2d2c01b00643b00743650a2d2cb04f2b20b04051
58214b525845441b2121591b2321b040b0042545b004254561648a635258
45441b212159592d2c00b00743b006430b2d2c4b53234b515a5820458a60
441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b
2121592d2c4b5458381b2121592d2cb002435458b0462b1b21212121592d
2cb002435458b0472b1b212121592d2cb002435458b0482b1b2121212159
2d2cb002435458b0492b1b212121592d2c2320b000508a8a64b100032554
58b0401bb10103255458b005438b59b04f2b5923b0622b2321235865592d
2cb108000c215460432d2cb10c000c215460432d2c012047b0024320b810
0062b81000635723b8010062b8100063575a58b020606659482d2cb10002
25b00225b0022553b800352378b00225b0022560b020632020b006252362
50588a21b00160231b2020b00625236252582321b001611b8a2123212059
59b8ffc11c60b0206323212d2cb1020042b123018851b1400188535a58b9
10000020885458b202010243604259b12401885158b920000040885458b2
020202436042b12401885458b2022002436042004b014b5258b202080243
6042591bb940000080885458b202040243604259b94000008063b8010088
5458b202080243604259b94000010063b80200885458b202100243604259
b12601885158b94000020063b80400885458b202400243604259b9400004
0063b80800885458b202800243604259b12801885158b94000080063b810
00885458ba00020100000243604259595959595959b10002435458400a05
40084009400c020d021bb10102435458b2054008ba010000090100b30c01
0d011bb18002435258b2054008b80180b109401bb901000002435258b205
4008ba0180000901401bb901800002435258b2054008b80200b109401bb2
054008ba010000090100595959b9400000808855b94000020063b8040088
555a58b30c000d011bb30c000d0159595942424242422d2c45b1024e2b23
b04f2b20b0405158214b5158b0022545b1014e2b60591b234b5158b00325
4520648a63b0405358b1024e2b601b21591b215959442d2c20b000502058
23651b2359b114148a7045b11010434b8a43515a58b0401bb04f2b5923b1
610626602b8a58b005438b592358655923103a2d2cb003254963234660b0
4f2b23b00425b0042549b0032563562060b062602bb003252010468a4660
b02063613a2d2cb00016b1020325b1010425013e003eb10102060cb00a23
6542b00b2342b1020325b1010425013f003fb10102060cb006236542b007
2342b00116b100024354584523452018698a6323622020b0405058671b66
5961b02063b0402361b00423421bb104004221215918012d2c2045b1004e
2b442d2c4b51b1404f2b505b582045b1014e2b208a8a4420b14004266163
61b1014e2b44211b23218a45b1014e2b208a234444592d2c4b51b1404f2b
505b5845208ab0406163601b23214559b1014e2b442d2c2345208a452361
2064b04051b0042520b0005323b040515a5ab1404f2b545a588a0c642364
235358b140408a612063611b2063591b8a5963b1024e2b60442d2c012d2c
002d2c05b10b0a432343650a2d2cb10a0b4323430b022d2cb002256366b0
0225b82000626023622d2cb0022563b0206066b00225b82000626023622d
2cb002256367b00225b82000626023622d2cb002256366b02060b00225b8
2000626023622d2c234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564
b0022564b002256164b00343525821206459b1024e2b23b000505865592d
2c238a4a234564b0022564b002256164b00343525821206459b1014e2b23
b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003254ab1014e
2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b003258ab068
2b8a103b2d2cb0032546b003254660b004252eb00425b00425b0042620b0
00505821b06a1bb06c592bb0032546b00325466061b08062208a2010233a
232010233a2d2cb0032547b003254760b0052547b0806361b00225b00625
496323b005254ab080632058621b2159b0042646608a468a4660b0206361
2d2cb00426b00425b00425b00426b06e2b208a2010233a232010233a2d2c
2320b001545821b00225b1024e2bb0805020605920606020b00151582121
1b20b005515821206661b0402361b100032550b00325b00325505a5820b0
0325618a535821b000591b21591bb00754582066616523211b2121b00059
5959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a238ab00159b0
04254620666120b00526b0062649b00526b00526b0702b236165b0206020
6661b02061652d2cb0022546208a20b000505821b1024e2b1b4523215961
65b00225103b2d2cb0042620b802006220b80200638a236120b05d602bb0
0525118a128a20398a58ba005d10000004266356602b23212010204620b1
024e2b23611b2321208a201049b1024e2b593b2d2cba005d100000092563
56602bb00525b00525b00526b06d2bb15d0725602bb00525b00525b00525
b00525b06f2bba005d10000008266356602b20b0005258b0502bb00525b0
0525b00725b00725b00525b0712bb0021738b00052b00225b001525a58b0
0425b0062549b00325b00525496020b0405258211bb000525820b0025458
b00425b00425b00725b0072549b00217381bb00425b00425b00425b00625
49b0021738595959595921212121212d2cba005d1000000b256356602bb0
0725b00725b00625b00625b00c25b00c25b00925b00825b06e2bb0041738
b00725b00725b00726b06d2bb00425b00425b00426b06d2bb0502bb00625
b00625b00325b0712bb00525b00525b00325b002173820b00625b00625b0
0525b0712b60b00625b00625b0042565b0021738b00225b002256020b040
535821b0406123b04061231bb8ffc05058b0406023b04060235959b00825
b00825b00426b0021738b00525b005258ab002173820b0005258b00625b0
082549b00325b00525496020b0405258211bb0005258b00625b00625b006
25b00625b00b25b00b2549b0041738b00625b00625b00625b00625b00a25
b00a25b00725b0712bb0041738b00425b00425b00525b00725b00525b071
2bb00217381bb00425b00425b9ffc0000217385959592121212121212121
2d2cb00425b0032587b00325b003258a20b000505821b0651bb068592b64
b00425b0042506b00425b0042549202063b00325206351b1000325545b58
21212321071b2063b0022520636120b0532b8a63b00525b0052587b00425
b004264ab00050586559b00426200146230046b00526200146230046b000
1600b000234801b00023480020b0012348b00223480120b0012348b00223
4823b2020001082338b2020001092338b1020107b00116592d2c23100d0c
8a63238a636064b940000400635058b000381b3c592d2cb00625b00925b0
0925b00726b0762b23b0005458051b0459b00425b00626b0772bb00525b0
0526b00525b00526b0762bb0005458051b0459b0772b2d2cb00725b00a25
b00a25b00826b0762b8ab0005458051b0459b00525b00726b0772bb00625
b00626b00625b00626b0762b08b0772b2d2cb00725b00a25b00a25b00826
b0762b8a8a08b00425b00626b0772bb00525b00526b00525b00526b0762b
b0005458051b0459b0772b2d2cb00825b00b25b00b25b00926b0762bb004
26b0042608b00525b00726b0772bb00625b00626b00625b00626b0762b08
b0772b2d2c03b00325b003254ab00425b003254a02b00525b005264ab005
26b005264ab00426638a8a63612d2cb15d0e25602bb00c2611b0052612b0
0a2539b0072539b00a25b00a25b00925b07c2bb00050b00b25b00825b00a
25b07c2bb000505458b00725b00b2587b00425b004250bb00a2510b00925
c1b00225b002250bb0072510b00625c11bb00725b00b25b00b25b9ffff00
762bb00425b004250bb00725b00a25b0772bb00a25b00825b00825b9ffff
00762bb00225b002250bb00a25b00725b0772b59b00a2546b00a254660b0
082546b008254660b00625b006250bb00c25b00c25b00c2620b000505821
b06a1bb06c592bb00425b004250bb00925b00925b0092620b000505821b0
6a1bb06c592b23b00a2546b00a25466061b0206323b0082546b008254660
61b02063b1010c255458041b0559b00a262010b003253ab00626b006260b
b0072620108a3ab10107265458041b0559b005262010b002253a8a8a0b23
2010233a2d2c23b0015458b9000040001bb940000000598ab0015458b900
0040001bb94000000059b07d2b2d2c8a8a080d8ab0015458b9000040001b
b94000000059b07d2b2d2c08b0015458b9000040001bb940000000590db0
7d2b2d2cb00426b00426080db00426b00426080db07d2b2d2c2001462300
46b00a43b00b438a632362612d2cb0092bb006252eb005257dc5b00625b0
0525b0042520b000505821b06a1bb06c592bb00525b00425b0032520b000
505821b06a1bb06c592b18b00825b00725b00625b00a25b06f2bb00625b0
0525b0042620b000505821b0661bb068592bb00525b00425b0042620b000
505821b0661bb068592b54587db0042510b00325c5b0022510b00125c5b0
052621b00526211bb00626b00425b00325b00826b06f2b59b10002435458
7db00225b0822bb00525b0822b20206961b00443012361b06060206961b0
206120b00826b008268ab00217388a8a6120696161b00217381b21212121
59182d2c4b52b1010243535a58231020013c003c1b2121592d2c23b00225
b00225535820b00425583c1b3959b00160b8ffe91c592121212d2cb00225
47b0022547548a20201011b001608a2012b00161b0852b2d2cb0042547b0
02254754232012b001612320b0062620201011b00160b00626b0852b8a8a
b0852b2d2cb0024354580c028a4b53b004264b515a580a381b0a2121591b
21212121592d2cb0982b580c028a4b53b004264b515a580a381b0a212159
1b21212121592d2c20b0024354b00123b05f237821b1000243b056237921
b0024323b020205c58212121b100471c598a8a208a208a23b81000635658
b81000635658212121b1012c1c591b2159b08062205c58212121b1001b1c
5923b08062205c58212121b1000c1c598ab00161b8ffb31c23212d2c20b0
024354b00123b07b237821b1000243b072237921b10002438ab020205c58
212121b0631c598a8a208a208a23b81000635658b81000635658b00426b0
015bb00426b00426b004261b21212121b13600231c591b2159b0042623b0
8062205c588a5c8a5a23212321b01d1c598ab08062205c5821212321b00e
1c59b00426b00161b8ff981c23212d000001000000020000dc7a812c5f0f
3cf5000b080000000000dda475fa00000000e1e85c1efc01fdcd09750814
000000060002000000000000000100000783fdbf00000a26fc01f8f20975
00010000000000000000000000000000050703c5000004b7000804b70008
04b7000804b7000804b7000804b7000804b7000804b7000804b7000804b7
000804b7000804b7000804b7000804b7000804b7000804b7000804b70008
04b7000804b7000804b7000804b7000804b7000804b700080777ffdf0777
ffdf04d500b0058c0012058a006c058a006c058a006c058a006c058a006c
058a006c057d00b0057d0000057d0000057d00b0057d0000063300120473
00b0047300b0047300b0047300b0047300b0047300b0047300b004730039
047300b0047300b0047300b0047300b0047300b0047300b0047300b00473
00b0047300b00491005e04740069047300b005ae006c04810052043200b0
0432000205ab006c05ab006c05ab006c05ab006c05ab006c05ab006c05a8
00b005a8001205a800b0021500b004bc00b0021500b00215ffee0215ffe0
0215fffc021500a1021500a10215ffdc021500a40215fff90215002d0215
ffe702a6002502a60025048c00b0048c00b0048c00b003ff00b003ff00b0
03ff00b003ff00b003ff00b003ff0000065200b005a600b005a600b005a6
00b005a600b005a600b005a600b005a600b005dc006c05dc006c05dc006c
05dc006c05dc006c05dc006c05dc006c05dc006c05dc006c05dc006c05dc
006c05dc006c05dc006c0622006c0622006c0622006c0622006c0622006c
0622006c05dc006c05dc006c05dc006c058a006605dc006c05dc006c05dc
006c087b006c049e00b0049e00b005dc006c04d900b004d900b004d900b0
04d900b00487004c0487004c0487004c0487004c0487004c0487004c0487
004c055a00b003d4001203d4001203d4001203d4001203d400120573009f
0573009f0573009f0573009f0573009f0573009f0573009f0573009f0608
009f0608009f0608009f0608009f0608009f0608009f0573009f0573009f
0573009f0573009f0573009f04af0008042c00080573009f072300020723
0002072300020723000207230002046c000e045100000451000004510000
045100000451000004510000047400000451000004510000045100000420
002704200027042000270420002703110038031100380311003803110038
031100380311003803110038031100380311003803110038031100380440
006a0440006a0440006a0440006a0440006a0440006a0440006a0440006a
0440006a0440006a0440006a044000010440006a0440006a0440006a0440
006a0440006a0440006a0440006a0440006a0440006a0440006a0440006a
06c2006a06c2006a047d00a1047d00a10433006a0433006a0433006a0433
006a0433006a0433006a047c006a046a006a047c006a047c006a0498006a
047c006a0437006a0437006a0437006a0437006a0437006a0437006a0437
006a0437fff80437006a0437006a0437006a0437006a0437006a0437006a
0437006a0437006a0437006a03f7005f020afffe0437006a0437006b0437
006b03df00270269002003e0004503b1000003e0004503e0004503e00045
03e0004503e00045046900a104690022046900a101e9008c01e900a101e9
009601e9ffe801e9ffcc01e9000001e9008c01e9008c01e9ffc501e9008d
03d2008c01e9002301e9000f01e9ffd201e9ffe401e9ffe401e9ffcc03e5
00a103e500a103e500a103e500a102150096021500920215009602150096
024800960215000006d300a1046900a1046900a104cdffbe046900a10469
00a1046900a1046900a1046900a1046a006a046a006a046a006a046a006a
046a006a046a006a046a0007046a006a046a006a046a006a046a006a046a
006a046a006a0479006a0479006a0479006a0479006a0479006a0479006a
046a006a046a006a046a006a0433006a046a005a046a005a046a006a0724
006a047d00a1047d00a1047c006a02ad00a102ad00a102ad006602ad0089
03e3006603e3006603e3006603e3006603e3006603e3006603e300660453
0096022e0020029600200296002002960020029600200296002004780097
0478009704780097047800970478009704780097047800970478009704c9
009704c9009704c9009704c9009704c9009704c900970478009704780097
047800970478009704780097039e00000494009705c4000b05c4000b05c4
000b05c4000b05c4000b038a0009039e0000039e0000039e0000039e0000
039e0000039e0000047e0000039e0000039e0000039e0000038100440381
00440381004403810044047e006a047e006a047e006a047e006a047e006a
047e006a047e006a047e006a047e006a047e006a047e0012047e006a047e
006a047e006a047e006a047e006a047e006a047e006a047e006a047e006a
0704006a0704006a047c006a047c006a047c006a047c006a047c006a047c
006a04d200200452002004520020047e002003900076036f005303930053
04b7000804d500b004d500b003b600b003b600b003b600b003b600b003b6
0000050500b005560011047300b0047300b0047300b006eb000204910052
05a600b005a600b005a600b005ca00b0048c00b0048c00b0054000110652
00b005a800b005dc006c059400b0049e00b0058a006c03d4001204600008
0460000805df004f046c000e0506009f05b900b0074f00b0077500b00594
00b004d500b0065400b005a6001207c8001107a200b00487004c058a006c
0592006c021500b00215fffc02a6002505e60012079800b004d9004005e6
0012076b00850546000e076a00b0053e0008072300b005f2000107de00b0
045b00520623007f05dc006c04e1000804e100080901006c074600020491
005204e600b0048c00b0048c00000569001205cd00b0068300b0083100b0
05b900b005ce006c058a006c03d40012045100000451000004b5000e069b
0012052c009f0506009f050600b106ba000006ba0000021500b006eb0002
04e600b00564001105a800b005cb00b00506009f067100b004b7000804b7
00080777ffdf047300b005ae006c05ae006c06eb00020491005204810052
05a600b005a600b005dc006c05dc006c05dc006c0592006c046000080460
0008046000080506009f065400b003d5fffb0468000e046c000e05dc006c
072300020575006c04e30000049e00b0055f001104af000805ef00560215
fffc0311003803110038031100380440006a046b006c040e00a1030300a1
030300a1030300a1030300a1030d0022043000a1049300120437006a0437
006a0437006a05c9fff803e6004b049a00a1049a00a1049a00a104b400a1
03e500a103e500a104400016054a00a1048500a1046a006a047100a1047d
00a10433006a033e0020039e0000039e0000055e006a038a0009045f007e
049800a106a700a106d000a1047100a103ef00a1055300a104ab002005e5
0016062a00a103e300660433006a0433006a01e9008c01e9fffc01e9ffe4
04690022063500a1040100380469002205c4000003ef0013061300a10403
000005be00a10525fff806d500a103ba004b059d0097046a006a04000000
0400000007b1006a060afff803e6004b043200a103f100a103e5002204d1
002004ad00a1056c00a1069400a1049900a1049d006a0433006a033e0020
039e0000039e000003c30009052c00200486007e045f007e046900a104e0
000004e00000021500b005c9fff8045200a1045b0016048500a1049f00a1
045f007e056500a10440006a0440006a06c2006a0437006a0437006b0437
006b05c9fff803e6004b03df0027049a00a1049a00a1046a006a046a006a
046a006a0433006a039e0000039e0000039e0000045f007e055300a10303
fff803a00009038a0009047c006a05c4000b0428006a04050000047d00a1
044a009603e50066047c006a05c9fff803e3002704780097047800970478
009703e500a1039e0000046900a106d300a104a0009706d3009706fb0097
063500a1046b006a01e90000047e006a047e006a047e006a0704006a02a6
002504b7000804d500b003b600b004b8003b047300b00420002705a800b0
05dc006c021500b0048c00b004af0008065200b005a600b00482006905dc
006c059400b0049e00b00400002703d400120451000005df004f046c000e
0623007f05df006604b700080473ff7f05a8ff7f0215ff7f05dcffb20451
ff0405dfffb20215fffc04510000035100b00466003b05a600b005dc006c
04d3006c043200b00428006a04d10033048c00b0046000000460ff040460
000005dc006c049e00b0058a006c065200b0058c0066058a006c058a0066
0732009f04b7004f050500b0049b004b04b8003b0582006c043d00120311
00380393ffa8031100380483006a045e0096039e0000046a006a03f7005f
03540063046900a1046400750216009703e500a1039e0000048000a1039e
000003510063046a006a04ac0020047d0097036c006a04a3006a03670020
04850097055e006a03ae0000059d009706670089021600970216ffeb0216
ffe2048500970485009704850097046a006a066700890483006a03f7005f
046900a102dc00a104000020049a00a10433006a0433006a0433006a046a
006a039b006a03a900a103ea006a04f3003304a7003b045e009604640075
055e006a04ac002004a7003b047d00970433006a01e9ffe4030e006a047d
00a1054a00a1047d002406d3009704690088047900a10412006704270044
0464006a0385003b02cb00dc0a2600b004460060044600c00446005d0446
0062044600380446005f044600600446005f044600640446005d0446006d
05fe004c05fe004c05fe004c05fe004c05fe004c05fe004c05fe004c05fe
004c05fe004c05fe004c05fe004c05fe004c05fe004c05fe004c05fe004c
05fe004c05fe004c05fe004c05fe004c05fe004c0458005f02b7001b0443
00530443004e0446003804470057045c005e03d1001d043e0060045b0056
0493006f02de004004580071044600620458003d0446005f044600600452
005f044300640446005d04460060044600c00446005d0446006204460038
0446005f044600600446005f044600640446005d04460064044600ea0446
006104460062044600360446005f044600600446005f044600640446005d
02b8003102b8007902b8003502b8003602b8001c02b8003702b8003102b8
002a02b8003302b8003502b8003102b8007902b8003502b8003602b8001c
02b8003702b8003102b8002a02b8003302b800350124fec1061700240607
00240694003505ad0024063c003605f8002406940035069400360694001c
05f800240694003706070024069400360694003705e6002a02b8003102b8
007902b8003502b8003602b8001c02b8003702b8003102b8002a02b80033
02b8003502b8003102b8007902b8003502b8003602b8001c02b8003702b8
003102b8002a02b8003302b8003500000000000000000000000000000000
000000000000ffdc0000ff580000ffdc0000febf00000000046a000001a0
000001a00000024b00a40229008002c6007602c60076024900a402490080
024900a402490080068b00a4025800ad024b00a604030052040300520249
00a403c200a603a8005d043900ad041c0052044c003503ae000002b70017
02b7001702b9006302b9006303ae0000075c0000075c000003ae000003ae
000002ca006b02ca006b03ae0000075c0000025800840258004a025b0007
025b004b025b0088025b004b025b00850258004a025b0007025b004b025b
0088025b004b02290080039f0080039e0085039f00800229008502290080
022900850353005a0353005a01ee005a01ee005a02f5008601af00860353
005a0353005a01ee005a01ee005a0269000404cd004b01ee003101ee0031
0433006a044600dd06fa006a04460024045800720446005b076f005a0446
00d405fa006004460072060000600600006005fe00930627005e05fe0060
0728006c0525006a047a004c03c2006605fe004c03bf006a05fe004c0433
001b0703006a02ec003901b0008602df0086022900cc022900cc03a4004c
04c800db03a4004c0696007d08d500b005fe004c04a00060049900350466
00210446006d04580053044600740458005304580053044600690446004e
0458006a08e30000044600140485004b0458000205ca00b004d5006c04a0
006c046e00020466004e044600570446003e0458002f0556009f053300a1
048c002306aa0060044600140458001604460038085900b00446005e062b
00a705ed004c044600500446004c045800540724005f0446002603f7017e
02b7001904460071032b0060032b01420446007104460071044600710446
00bd04460071044600710446007104460071044600730446004704460046
044600710446002504460025044600710446009505d9004c048f00b5032b
006005df006604b8003b059400b004000027057e0060048000a1046a0050
048f0096069c006009390060044601ac04cd009e04cd00d404cd005c04cd
00d404cd00a104cd00d404cd005c04cd00d40733005c0444005c0444005c
05fe004c05fe004c05fe004c05fe004c05fe004c05fe004c05fe004c05fe
004c05fe004c05fe004c05fe00bf03c200a6038d00390600006003c200a8
03c200aa0400fff6040001bc0400fff60400fff6040001bc040001bc0000
fd710000fd4f0000011b000000fd0000011b0000011b000000fd0000ff96
046a01e304b5ff7f046a010c00000127000001cc00000106000001d70000
013f000002430000010d0000010b00000129000001650000011200000125
000001c4000001c70000ffa20000ff97000001c90000018a0000018b0000
002200000000000001c700000127000001cc00000107000001e00000013f
0000010b0000010b00000119000001650000011200000125000001cf0000
014100000164046a0127046a01cc046a0106046a01d7046a013f046a010d
046a010b046a0129046a0165046a0112046a0125046a018a046a018b05e6
006c0488006a076b008505c40000076a008505c400000446004c0000fd13
0000fd130000fd130000fcff0000fcf60000fc010000fcf60000fceb0000
fed90000ffbd03110038047e006a047e006a047e006a0000010b0000fd13
000000e80000fd130000fd130000fcff0000fcf60000fc010000fcf60000
fceb044600b90000005f0088009a00ac00c000dc00f001040118012a013e
015a016e0182019601a801bc01ce01e101f202050218023502470289029c
02e1033703760389039c03b003c303d50403040b044504580460049f04c3
04d504e704f9050b051f053b054f056305770589059a05ae05c005d305e5
05f80648066c067e06cb07120732075c07a507b707ca07dd07f108030827
0857086a087c0888089b08ae08c108d408e608fa090d0921093309460959
0977098a09b109c409fe0a140a270a390a4c0a580a7e0aad0ad00ae30af6
0b0a0b1d0b300b660ba40bb70bca0bdd0bf10c0e0c220c360c4a0c5d0c71
0c840c980cf60d090d1d0d300d440d570d6b0d7d0d900dd20e1d0e300e43
0e9d0ecd0f050f5b0f9e0fb00fc20fd51029103b104d1060107210851099
10ea1106112d113f11521165118e11a111b411c711da11ee120112151260
12731287129a12ae12c112d512e712fa130e13211340138d13cb13fb140e
1421143414471473149714a914bb14cd14e114f31528153b154c155e157f
159115a315b415d915eb15fd160f1622163416461658166a1676168816d6
16e816fa170e172a173e175217661778178c17a817bc17d017e417f6180a
181c182f18401853186618831895191b192e196f19c71a041a161a281a3b
1a4d1a5e1a9f1b011b141b651bbd1c181c5c1c6e1c801c921ca41cb81cd4
1ce81cfc1d101d221d331d471d591d6c1d7d1d8f1d971dc11dd31ddb1e20
1e281e551ee81f2f1f411f531f651f771f881fb61ff0200320272039204c
205f20722085209720ab20be20d220de20f0210c211f214f216c217f21a6
21b921e0221b2239224c225f2273227f22b52300232e2340234c235e2371
2383239523db241524272439244b245f247b248f24a324b724c924dd24ef
2502255c256e2582259425a725b925cc25dd25ef2628266f26812693270b
274d278f27d227f7280a281d28312884289628a828bb28cd28e028f4294c
2971299e29d729ea29fe2a122a412a532a652a772a892a9d2aaf2ac22b16
2b282b3c2b4e2b612b732b862b982bab2bbe2bd02bef2c2f2c5c2c6f2c82
2c952ca82cde2d0f2d212d332d452d512d632d9d2db02dc12dd32df42e06
2e182e292e6e2e802e922ea62ec22ed62eea2efc2f102f2c2f402f542f66
2f7a2f8c2f9d2fb02fc32fe02ff23075308830e530f73109311b312d313e
314a31563162316e319c31e5321a3222325d3265327b328d32af32d432f6
3334336e33763388339a33d5342534473459346c34b734bf34d13506350e
3516351e3538354035483550357f359035e435ec361d3646366b36a036c6
36fd373c377c37d53817381f386938b438bc38cf38d73911396339a839f7
3a4e3a923af23b263b6e3bd53c413ca73caf3cb73ce43d243d8f3ddb3dee
3e263e593e8c3ebc3ef13f203f663f913fee403b4066406e409e40db410e
414f418b41bb421e428b429342a542ed432f436a439d43dc441a442b443d
44454456445e447144844496449e44b044c344d6451f4532454445554567
457a458c459f45d7461a46504658466046a746ea47284767476f47c547d8
47e047f34806480e486948ab48c748da48f5491f4946498849c049c849da
49ec4a234a704a934aa44ab64b014b274b394b664b8f4bb54bbd4be24bea
4bf24c0e4c164c274c2f4c374c674c9b4cd54d1b4d4c4d794daf4de54e2d
4e6e4e764ebb4eff4f074f404f484f504f9f4fde50305063509c50f9512c
517751d3524352ad52b552bd52e853265332537b538e53c553f354275457
548d54bd54ff5533558955cf55fa56245658569b56c95703573e5746579d
57fd58055817585e589458c558fa593b597259835995599d59ae59b659c8
59db59ed5a2a5a3b5a4d5a5f5aa55ab75ac95ada5aec5aff5b115b235b54
5b9e5bde5be65bee5c2c5c635cb85d125d675d6f5da95e015e095e1a5e2c
5e345e515e595e615e9f5eef5f4e5f9d5ff16004600c601d602f6037603f
6047604f60576084608c6094609c60e660ee60f66114611c6124614a6152
615a6162618f6197619f61a761af61f062406253626562776289629c62ae
62c162d462e6630263316339638363c563ea642a646764a864d964e464f6
64fe6506650e651665566562656e65d1660c6648669b66e7673267686770
677c678f67d9682e685968a268f06931696069ab69c969f26a256a2d6a35
6a876a8f6abe6af86b3c6b796ba06bd26c176c526c8c6ce26cf56d086d1c
6d2e6d406d536d656d786d8a6d9c6dae6dcb6df96e016e3a6e856ed06f15
6f5a6f826fc370047063706b7073707b708370cd711b7123712b715e7166
719171d5722c726772a672f87345737e73ae73b77418745a747e74b87508
7535757a75ce75ea765276a876f77738778c77f5783c789d7901793d79b8
7a217a927aef7b5f7be47c4c7ccb7d4c7da37e3a7ec07f4f7f577f7a7f82
7f8a7f927f9a7fa27faa7fb27fba7fee8010804980528081808a8092809b
80a380ac80b480bc80c480cc80d480dc80e480ec80f480fc813681598161
816a8172817b8183818c8194819d81d681f7822a8274829c82de8323833d
839783e083e983f283fb8404840d8416841f84288431843a844f84608471
8482849384a484b584c684d784e884f9850a851b852c853d854e85578560
85698572857b8584858d8596859f85a885b185ba85c385cc85d585de85e7
85f085f9860286028602860286028602860f862e86498664866486648664
8664866d8679869986b786d286fa8706871287228752878287d28825882e
88508883888f88ed893e8947895b897089818989899989a989b189c189cc
89dd89e589f58a058a2b8a508a988adf8af88b118b368b5b8ba28be98c01
8c198c228c2f8c768c828caa8cd18cf78d328d698d898da78dd08de98e1d
8e4e8e6c8e888ec08eed8ef68eff8f448fab90369070909090e0917591c2
925092a192bd92ed930a93bc93f3947f94ed951095999606966d96d2970a
976f97a297aa97b297c497e097fc9845986e98bc98cc9929994f99bb99ed
9a5d9aa69aec9b419b9b9c019c689cbe9d3d9d8f9ded9e199e799eca9f3a
9f6b9fbea019a058a090a0d0a12ba162a1d0a20ba24da291a29da2f0a331
a3b9a40da434a46ea4b1a4e8a503a517a53ea55ca57aa595a5b2a5c3a5e7
a61fa639a662a685a6a6a6d5a6ffa725a78aa7c3a7dfa7fba859a881a8aa
a8b2a8baa8d4a907a939a970a9c4a9deaa57ab02ab0fab32ab55ab78ab9c
abbdabe0ac01ac25ac5eac98acdcad1dad60ada0ade4ae23ae66aea5aee7
af0daf4fb071b0aab0d5b0ddb0f1b10db123b13ab14cb163b179b18cb1b1
b2a8b2cbb2f5b310b32bb354b36fb383b397b3ceb3fbb417b42bb43fb45c
b470b48ab4a4b4c6b4f4b52ab53bb568b58eb5b5b5d0b5f4b62cb657b668
b678b69eb6cbb6e7b6fbb70fb72cb746b760b787b7b4b7eab7fbb828b855
b866b86eb88ab892b89ab8a2b8aab8b2b8bab8c2b8cab8d2b8dab8e2b948
b9aab9b6b9c2ba3eba98bae0bb0fbb3dbb7cbbcfbbf4bc18bc4dbc94bc9d
bca6bcb2bcbebccabcd5bcf7bd26bd48bd77bdb6be09be2ebe52be87bece
beed00010000050700c000100070000800020010002f01000001024cffff
0008000140ff5f30ff1f5e31ff1f5d2f721f5c2f931f5b2fff1f5a2eff1f
592ecd1f582cff1f572dff1f562dcd1f552bff1f54294a1f5329ff1f522a
ff1f512aab1f5029201f4f28451f4e28ab1f4d28ff1f4c27ff1f4b26ff1f
4a262b1f4924671f4824cd1f4724ff1f4625ff1f4525ab1f4423ff1f4322
ff1f4221cd1f4121ff1f4021ab1f3f20cd1f3e20ff1f3d20931f3c202f1f
3b1e721f3a1eff1f391fff1f381f801f371d721f361dff1f351dcd1f341c
cd1f331cff1f321cab1f3130721f2e2c3d1f2d2c721f2a295e1f2524cd1f
241a1b195c2322401f22031a195c211a3d1f203c1a195c1f1e671f1e2918
165c1d17ff1f1c16ff1f1b35193a5b1836163a5b1a405035193a5b173616
3a5b15193b16685a1339125511391055125910590d390c55053902550439
02550c590f360e550b390a55073906550e590a5906590059093908550339
02550859025910000340400501b9019000542b4bb807ff524bb008505bb0
0188b02553b00188b040515ab00688b000555a5b58b101018e59858d8d00
1d424bb0905358b20300001d4259b10202435158b104038e5942002b002b
2b2b002b002b002b002b2b2b2b002b2b2b2b002b002b2b2b012b012b012b
012b012b012b002b012b2b012b2b002b2b012b2b012b002b2b2b012b2b2b
002b2b2b2b2b2b2b012b2b2b2b002b2b2b2b2b2b2b2b2b2b012b2b002b2b
2b2b012b2b2b2b2b2b002b2b2b2b2b2b2b2b2b2b180000>
[16353 16381 16065 16101 15357 16361 1143 ] AllocGlyphStorage
] 

def 

108 44 PrepFor2015

AddFontInfoBegin

AddFontInfo

/OrigFontType /TrueType def 
/OrigFontName <4170746F73> def
/OrigFontStyle () def
/FSType 8 def

AddFontInfoEnd

[16#2c 16#ee1b78b0 ] AddXUID

Type42DictEnd

%/AddT42Char 
%{ 
%    Is2015? 
%        { findfont /GlyphDirectory get begin def end pop pop } 
%        { findfont /sfnts get 4 index get 3 index 2 index putinterval pop pop pop pop } 
%        ifelse 
%} bind def

1 4102 70 <000100b0000004f60542000b0019400c030a0a000601027208000872002b322b3211392f333031731133112111331123112111b0b402e0b2b2fd200542fdcb0235fabe0271fd8f00>
/TT2886t00 AddT42Char 

1 14384 244 
<0002006affee03cc03df001a0021001d400e1b16000f0f001f08077213000b72002b322b3211392f1239333031452226263534363633321615140607211e0233323637330e020121262623220602369fcb625fc396c7e20202fd4a013b8069707e03a50364b4fe6102140388797a8b1285e58f95e380f0e10f29095f9f606963679551025988908f>
/TT2886t00 AddT42Char 

2 1110 299 <00010096000001f10542000c000eb60500720a000a72002b322b30316122262635113311141633331501b9777e2ea62f592d4b8d630407fc015b6088>
/TT2886t00 AddT42Char 

2 2006 314 <0002006afff0040003e1000f001f0010b71808077210000b72002b322b32
303145222626353436363332161615140606273236363534262623220606
1514161602308fcc6b6bcc8f92cf6f6fcf926c803838806c697b36367b10
79e19b9fe37a7ae39f9be179855fa76a6caa6161aa6c6aa75f00>

/TT2886t00 AddT42Char 

5 3912 985 <> 

/TT2886t00 AddT42Char 

2 6270 383 <0001000b000005b803ce000c001f40100b03060300080805050106720a00
0a72002b322b321133111217393031610133131333131333012303030142
fec9aee7e9b9ede5a4fec9b0efee03cefcee0312fcef0311fc320319fce7>

/TT2886t00 AddT42Char 

2 4036 344 <000100a10000028803da000e0015400b0903060772010672000a72002b2b
2b32323031731133173636333315232206060711a19d062992751417496e
522003cea64c669926432cfd5400>/TT2886t00 AddT42Char 
1 13500 238 <0002006affee03dc05420012001f001d40100e0a720d00721a0b08077213
10000b72002b32322b32322b2b3031452226263534363633321617113311
232706062732363711262623220615141601ee77ae5f65b87d689a2fa79e
0934a44d6b8e2c29856585877f1272e3a7a6de715b4e020cfabe8e475989
65470177526bbeafb5be>/TT2886t00 AddT42Char 
1 0 0 <00040000000003c5054a0003000f0013002d002f401a2a17201a27052404
0a14690a0410102e1d241313010272000872002b2b3210c632113310c632
2b1112173930317111211125222635343633321615140605211121012636
373636353426232206152334363332161514060706060703c5fe19243030
24243232fe41033efcc20165043b3b3a365256545f70a281829b50433722
04054afab6df2f24242f2f24242f9c04c2fcf6526b2d2c47363b4f58507d
887c6b5064342b4b3500>/TT2886t00 AddT42Char 

% The string that is to be printed: = 01, 02, 03, 03, 04, 05, 06, 04, 07, 03, 08
% 600 694 M <070102030304050604070308> [ 51 71 53 25 26 55 20 71 55 33 26  0 ] xS 

% xShow first looks in the Encoding array in the font to get the literal index ( i.e., g70 ) 
% from the glyph digit (i.e. 1)

/TT2886t00 findfont 
/Encoding get 
dup 1 /g70 put
dup 2 /g244 put
dup 3 /g299 put
dup 4 /g314 put
dup 5 /g985 put
dup 6 /g383 put
dup 7 /g344 put
dup 8 /g238 put
pop

% next, get the CharStrings dictionary, and get the key/value pair for key == literal from Encoding array
% That returns a number. i.e., g70 returns 70

/TT2886t00 findfont 
/CharStrings get 
begin
/g70 70 def
/g244 244 def
/g299 299 def
/g314 314 def
/g985 985 def
/g383 383 def
/g344 344 def
/g238 238 def
/.notdef 0 def
end

 /TT2886t00 /Font G2UBegin
/g70 <0048> def
/g244 <0065> def
/g299 <006C> def
/g314 <006F> def
/g985 <0020> def
/g383 <0077> def
/g344 <0072> def
/g238 <0064> def
G2UEnd

Pscript_WinNT_Incr begin

%%BeginResource: file Pscript_Text 5.0 0

/TextInit
{
    TextInitialised? not 
    {
        /Pscript_Windows_Font currentdict def
        /TextInitialised? true def
        /fM [1 0 0 1 0 0 ] def

        /mFM matrix def
        /iMat [1 0 0.212557 1 0 0 ] def
    }
    if
} b

/copyfont
{

    1 index length add dict begin 

    { 1 index /FID ne
        { def }
        { pop pop }
        ifelse
    } 
    forall 

    currentdict end

} bind def

/EncodeDict 11 dict d
/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b

/mF
{
    dup 7 1 roll findfont exch 

    { 
        dup /Encoding get dup StandardEncoding eq 

        { pop true } 
        { 
            { ISOLatin1Encoding } stopped 

            { pop false } 
            { eq } 

            ifelse

            { true }
            { 
                dup begin true 
                32 1 127 { Encoding 1 index get StandardEncoding 3 -1 roll get eq end } for
                end 
            } 

            ifelse 

        } 
        ifelse
    } 
    { false } 
    ifelse

    { 1 index exch rF }
    { 0 copyfont }
    ifelse

    6 -2 roll pop pop exch pop /pd_charset dup where 

    { exch get 128 eq 
        { dup FDV 2 copy get dup length array copy put pd_CoverFCRange }
        if
    }
    { pop }
    ifelse

    2 index exch definefont fM 5 4 -1 roll put fM 4 0 put fM makefont Pscript_Windows_Font 3 1 roll put

} b 


/sLT
{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource

end 

reinitialize

false /F0 0 /0 false /TT2886t00 

mF 

/F0S63YFFFFFF9C F0 [99.809 0 0 -100 0 0 ] mFS

F0S63YFFFFFF9C Ji 

900 694 M <0102030304050604070308> [ 71 53 25 26 55 20 71 55 33 26  0 ] xS 
1092 694 M <05> S 
LH
(%%[Page: 1]%%) = 
%%PageTrailer


/Helvetica findfont
12 scalefont setfont
288 720 moveto
(ABC) show

%%Trailer
%%BoundingBox: 0 0 612 792
%%DocumentNeededResources: 
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_T42Hdr 5.0 0
%%+ procset Pscript_Text 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
ehsave restore
%%Pages: 1
(%%[LastPage]%%) = 
%%EOF
